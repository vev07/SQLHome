Найти все товары с ценой больше 30
db.products.find({price: {$gt: 30}})

Задать значение 10 для свойства "count" у товара с идентификатором 5
db.products.updateMany({id: 5}, {$set: {count: 10}})


Найти все товары с категорией "electronics" или "home"
db.products.find({category: {$in: ['home','electronics']}})


Увеличить на 1 поле "countOfOrderedUnits" у всех товаров с категорией "music"
db.products.updateMany({category: 'music'}, {$inc: {countOfOrderedUnits: 1.1}})


db.products.updateMany({category: 'music'}, {$mul: {countOfOrderedUnits: 1}})


Найти все товары, у которых поле "marks" содержит значения 4 и 5
db.products.find({$and: [{marks: 4}, {marks: 5}]})


Обновить поле "category" на "sports" для всех товаров, у которых поле "category" равно "sport"
db.products.updateMany({category: 'sport'}, {$set: {sport: 'sports'}})


Найти все товары, у которых поле "marks" не содержит значение 3
db.products.find({marks: {$nin: [3]}})

Обновить поле "marks" у товара с идентификатором 8, добавив значение 5
db.products.updateMany({marks: 8}, {$inc: {countOfOrderedUnits: 5}})

Найти все товары, у которых поле "countOfOrderedUnits" больше или равно 10
db.products.find({countOfOrderedUnits: {$gte: 10}})

Обновить поле "count" у всех товаров с категорией "music", увеличив его на 5
db.products.updateMany({category: 'music'}, {$inc: {count: 5}}) 

Найти все товары, у которых поле "marks" содержит все значения [4, 5]
db.products.find({$or: [{marks: 4}, {marks: 5}]})

Обновить поле "category" у всех товаров, у которых поле "category" равно "sport", заменив его на "outdoor"
db.products.updateMany({category: 'sport'}, {$set: {category: 'outdoor'}})

Найти все товары, у которых поле "marks" содержит значения [3, 4, 5]
db.products.find({$and: [{marks: 3},{marks: 4}, {marks: 5}]})






